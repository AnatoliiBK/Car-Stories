import React, { useEffect, useRef, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { Link, useNavigate, useLocation } from "react-router-dom";
import { logoutUser } from "../slices/authSlice";
import { fetchViewedCars } from "../slices/viewedCarsSlice"; // ‚úÖ 5 02 25
import { toast } from "react-toastify";
import { io } from "socket.io-client";
import axios from "axios";
import { url, setHeaders } from "../slices/api";
import "./Header.css";
import { useTheme } from "../components/ThemeContext";
// import Flag from "../assets/racing flag waving in the wind.webp";

const Header = () => {
  const auth = useSelector((state) => state.auth);
  const { usersList } = useSelector((state) => state.users);
  const viewedCars = useSelector((state) => state.viewedCars.viewedCars); // ‚úÖ –ë–µ—Ä–µ–º–æ –∑ Redux 5 02 25
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const location = useLocation();
  const { theme } = useTheme();

  const user = usersList?.find((u) => u._id === auth._id);
  const [userAvatar, setUserAvatar] = useState(user?.avatar || "");

  const [carCount, setCarCount] = useState(0);
  const [favoritesCount, setFavoritesCount] = useState(0);
  // const [recentlyAddedCount, setRecentlyAddedCount] = useState(0); // 1 02 25
  const [classicCarCount, setClassicCarCount] = useState(0); // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –∫–ª–∞—Å–∏—á–Ω–∏—Ö –∞–≤—Ç–æ
  const [viewedCarsCount, setViewedCarsCount] = useState(0); // 7 02 25
  const [myCarsCount, setMyCarsCount] = useState(0);

  // üî∏ –°—Ç–∞–Ω –¥–ª—è –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // üî∏ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ä–µ—Ñ–∏ –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª—ñ–∫—É –ø–æ–∑–∞ –º–µ–Ω—é
  const menuRef = useRef(null);
  const toggleRef = useRef(null);

  // üìå –ó–∞–∫—Ä–∏—Ç—Ç—è –º–µ–Ω—é –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        menuRef.current &&
        !menuRef.current.contains(event.target) &&
        toggleRef.current &&
        !toggleRef.current.contains(event.target)
      ) {
        setIsMobileMenuOpen(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);
  

  console.log("VIEWED CARS VIEWED CARS : ", viewedCars);

  // üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —É–ª—é–±–ª–µ–Ω–∏—Ö –∞–≤—Ç–æ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  const fetchFavoritesCount = async () => {
    try {
      const response = await axios.get(`${url}/favorites`, setHeaders());
      setFavoritesCount(response.data.length);
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É–ª—é–±–ª–µ–Ω–∏—Ö –∞–≤—Ç–æ:", err);
    }
  };

  // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤, —è–∫—ñ –Ω–∞–ª–µ–∂–∞—Ç—å –ø–æ—Ç–æ—á–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ ‚úÖ
  const fetchMyCarsCount = async () => {
    try {
      const response = await axios.get(`${url}/cars/my`, setHeaders()); // –ù–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç
      setMyCarsCount(response.data.length);
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–æ—ó—Ö –∞–≤—Ç–æ:", err);
    }
  };

  // üîπ –ù–æ–≤–∏–π useEffect: –ø—Ä–∏ –∑–º—ñ–Ω—ñ auth._id –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç—ñ –∞–≤—Ç–æ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 7 02 25
  useEffect(() => {
    if (auth._id) {
      dispatch(fetchViewedCars());
    }
  }, [auth._id, dispatch]);

  // üîπ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏—Ö –∞–≤—Ç–æ –∑ –¥–∞–Ω–∏–º–∏ –∑ Redux 7 02 25
  useEffect(() => {
    setViewedCarsCount(viewedCars.length);
  }, [viewedCars]);

  // –í–∏–∫–ª–∏–∫ fetchFavoritesCount –ø—Ä–∏ –∑–º—ñ–Ω—ñ auth._id (—Ç–æ–±—Ç–æ, –∫–æ–ª–∏ –≤—Ö–æ–¥–∏—Ç—å –Ω–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)
  useEffect(() => {
    if (auth._id) {
      fetchFavoritesCount();
      fetchMyCarsCount();
    } else {
      setFavoritesCount(0);
      setMyCarsCount(0);
    }
  }, [auth._id]);

  useEffect(() => {
    // üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤
    const fetchCarCounts = async () => {
      try {
        const response = await axios.get(`${url}/cars`, setHeaders());

        const classicCars = response.data.filter((car) => car.year < 1987);

        setCarCount(response.data.length); // –£—Å—ñ –∞–≤—Ç–æ
        setClassicCarCount(classicCars.length); // –ö–ª–∞—Å–∏—á–Ω—ñ –∞–≤—Ç–æ
      } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤:", error.message);
      }
    };

    // 7 02 25 –≤–∏–Ω–µ—Å–µ–Ω–æ –ø–æ–∑–∞ —Ü–µ–π useEffect
    // // üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —É–ª—é–±–ª–µ–Ω–∏—Ö –∞–≤—Ç–æ
    // const fetchFavoritesCount = async () => {
    //   try {
    //     const response = await axios.get(`${url}/favorites`, setHeaders());
    //     setFavoritesCount(response.data.length);
    //   } catch (err) {
    //     console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É–ª—é–±–ª–µ–Ω–∏—Ö –∞–≤—Ç–æ:", err);
    //   }
    // };

    // –≤–∏–¥–∞–ª–µ–Ω–æ 5 02 25
    // // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏—Ö –∞–≤—Ç–æ
    // const updateViewedCarsCount = () => {
    //   const viewedCars = JSON.parse(localStorage.getItem("viewedCars")) || [];
    //   setViewedCarsCount(viewedCars.length);
    // };

    // dispatch(fetchViewedCars()); // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç—ñ –∞–≤—Ç–æ –∑ –±–µ–∫–µ–Ω–¥—É —á–µ—Ä–µ–∑ Redux 7 02 25
    fetchCarCounts();
    // fetchFavoritesCount(); 7 02 25 –≤–∏–¥–∞–ª–µ–Ω–æ
    // –≤–∏–¥–∞–ª–µ–Ω–æ 5 02 25
    // updateViewedCarsCount(); // –û–Ω–æ–≤–ª—é—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏—Ö –∞–≤—Ç–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ

    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ WebSocket
    const socket = io(url);

    // –ö–æ–ª–∏ –¥–æ–¥–∞—î—Ç—å—Å—è –Ω–æ–≤–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å
    socket.on("new-car", (newCar) => {
      setCarCount((prev) => prev + 1);

      // –Ø–∫—â–æ –∞–≤—Ç–æ –∫–ª–∞—Å–∏—á–Ω–µ (–¥–æ 1987 —Ä–æ–∫—É) ‚Äî –¥–æ–¥–∞—î–º–æ –¥–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
      if (newCar.year < 1987) {
        setClassicCarCount((prev) => prev + 1);
      }
    });

    // –ö–æ–ª–∏ –∞–≤—Ç–æ –≤–∏–¥–∞–ª—è—î—Ç—å—Å—è
    socket.on("car-deleted", (deletedCarId) => {
      setCarCount((prev) => Math.max(prev - 1, 0));
      setClassicCarCount((prev) => Math.max(prev - 1, 0));
    });

    // –ö–æ–ª–∏ –∞–≤—Ç–æ –¥–æ–¥–∞—î—Ç—å—Å—è –≤ —É–ª—é–±–ª–µ–Ω—ñ –∞–±–æ –≤–∏–¥–∞–ª—è—î—Ç—å—Å—è –∑ –Ω–∏—Ö
    socket.on("favorite-updated", ({ isFavorite }) => {
      setFavoritesCount((prev) =>
        isFavorite ? prev + 1 : Math.max(prev - 1, 0)
      );
    });

    // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏—Ö –∞–≤—Ç–æ —á–µ—Ä–µ–∑ WebSocket
    socket.on("viewed-updated", () => {
      dispatch(fetchViewedCars());
    });

    // –≤–∏–¥–∞–ª–µ–Ω–æ 5 02 25
    // // üì¢ –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –∑–º—ñ–Ω–∏ —É `localStorage`
    // window.addEventListener("storage", updateViewedCarsCount);

    // socket.on("viewed-car", updateViewedCarsCount);

    return () => {
      // window.removeEventListener("storage", handleStorageChange);
      socket.off("new-car");
      socket.off("car-deleted");
      socket.off("favorite-updated");
      socket.off("viewed-updated");
      // socket.off("viewed-car", updateViewedCarsCount);
      // window.removeEventListener("storage", updateViewedCarsCount);
      socket.disconnect();
    };
  }, [dispatch]);

  return (
    <div className="header-container">
      <header className="header">
      <div
        ref={toggleRef}
        className={`mobile-toggle ${isMobileMenuOpen ? "rotated" : ""}`}
        onClick={() => setIsMobileMenuOpen((prev) => !prev)}
      />
      {/* <nav className="header-nav"> */}
      <nav
        ref={menuRef}
        className={`header-nav ${isMobileMenuOpen ? "open" : ""} ${theme}`}
      >
        {auth._id ? (
          <>
            {/* <Link to="/" className={`header-link ${location.pathname === "/" ? "active" : ""}`}>
              <img src={Flag} alt="–ì–æ–ª–æ–≤–Ω–∞" className="header-icon" />
            </Link> */}
            <Link
              to="/cars"
              className={`header-link ${
                location.pathname === "/cars" ? "active" : ""
              }`}
            >
              –ê–≤—Ç–æ–º–æ–±—ñ–ª—ñ —Å–≤—ñ—Ç—É{" "}
              {carCount > 0 && (
                <span className="pending-badge">{carCount}</span>
              )}
            </Link>
            <Link
              to="/classic-cars"
              className={`header-link ${
                location.pathname === "/classic-cars" ? "active" : ""
              }`}
            >
              –ö–ª–∞—Å–∏—á–Ω—ñ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ{" "}
              {classicCarCount > 0 && (
                <span className="pending-badge">{classicCarCount}</span>
              )}
            </Link>
            <Link
              to="/favorites"
              className={`header-link ${
                location.pathname === "/favorites" ? "active" : ""
              }`}
            >
              –£–ª—é–±–ª–µ–Ω—ñ{" "}
              {favoritesCount > 0 && (
                <span className="pending-badge">{favoritesCount}</span>
              )}
            </Link>
            <Link
              to="/viewed-cars"
              className={`header-link ${
                location.pathname === "/viewed-cars" ? "active" : ""
              }`}
            >
              –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç—ñ{" "}
              {viewedCarsCount > 0 && (
                <span className="pending-badge">{viewedCarsCount}</span>
              )}
            </Link>
            <Link
              to="/my-cars"
              className={`header-link ${
                location.pathname === "/my-cars" ? "active" : ""
              }`}
            >
              –ú–æ—ó –∞–≤—Ç–æ{" "}
              {myCarsCount > 0 && (
                <span className="pending-badge">{myCarsCount}</span>
              )}
            </Link>
            <Link
              to="/cart"
              className={`header-link ${
                location.pathname === "/cart" ? "active" : ""
              }`}
            >
              –ö–æ—à–∏–∫
            </Link>
            <Link
              to="/"
              className="header-link"
              onClick={() => {
                dispatch(logoutUser(null));
                setUserAvatar("");
                navigate("/");
              }}
            >
              –í–∏—Ö—ñ–¥
            </Link>
          </>
        ) : (
          <>
            <Link
              to="/login"
              className={`header-link ${
                location.pathname === "/login" ? "active" : ""
              }`}
            >
              –í—Ö—ñ–¥
            </Link>
            <Link
              to="/register"
              className={`header-link ${
                location.pathname === "/register" ? "active" : ""
              }`}
            >
              –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
            </Link>
          </>
        )}
      </nav>
    </header>
    </div>
    
  );
};

export default Header;

// useEffect(() => {
//   // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞–≤—Ç–æ –≤ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ
//   const fetchPendingCars = async () => {
//     try {
//       const response = await axios.get(`${url}/cars`, setHeaders());
//       setCarCount(response.data.length);
//     } catch (error) {
//       console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–≤—Ç–æ:–º–æ–±—ñ–ª—ñ–≤", error.message);
//     }
//   };

//   // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É–ª—é–±–ª–µ–Ω–∏—Ö –∞–≤—Ç–æ
//   const fetchFavoritesCount = async () => {
//     try {
//       const response = await axios.get(`${url}/favorites`, setHeaders());
//       setFavoritesCount(response.data.length);
//     } catch (err) {
//       console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É–ª—é–±–ª–µ–Ω–∏—Ö –∞–≤—Ç–æ:", err);
//     }
//   };

//   const fetchRecentlyAddedCars = async () => {
//     try {
//       const response = await axios.get(`${url}/cars`);
//       const recentCars = response.data.filter((car) => {
//         const now = new Date();
//         const timeApproved = new Date();
//         timeApproved.setDate(now.getDate() - 10);
//         return new Date(car.createdAt) >= timeApproved;
//       });
//       setRecentlyAddedCount(recentCars.length);
//     } catch (error) {
//       console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∞–≤—Ç–æ:", error.message);
//     }
//   };

//   fetchPendingCars(); // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
//   fetchFavoritesCount();
//   fetchRecentlyAddedCars();

//   // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ WebSocket
//   const socket = io(url);

//   // // üîπ –ö–æ–ª–∏ –¥–æ–¥–∞–Ω–æ –Ω–æ–≤–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å —É —Å–ø–∏—Å–æ–∫ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–¥—ñ—Å–ª–∞–≤ –∞–≤—Ç–æ)
//   // socket.on("pending-car-added", (newCar) => {
//   //   setPendingCount((prev) => prev + 1);
//   // });

//   // üîπ –ö–æ–ª–∏ –∞–≤—Ç–æ —Å—Ö–≤–∞–ª–µ–Ω–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (–π–æ–≥–æ –≤–∏–¥–∞–ª—è—é—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è)
//   socket.on("new-car", (approvedCar) => {
//     setCarCount((prev) => Math.max(prev + 1, 0));
//   });

//   // üîπ –ö–æ–ª–∏ –∞–≤—Ç–æ –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–µ–Ω–µ (–∑ –±—É–¥—å-—è–∫–æ–≥–æ —Å–ø–∏—Å–∫—É)
//   socket.on("car-deleted", (deletedCarId) => {
//     setCarCount((prev) => Math.max(prev - 1, 0));
//     setRecentlyAddedCount((prev) => Math.max(prev - 1, 0));
//   });

//   // üîπ –ö–æ–ª–∏ –∞–≤—Ç–æ –¥–æ–¥–∞–Ω–æ –¥–æ —É–ª—é–±–ª–µ–Ω–∏—Ö —á–∏ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ —É–ª—é–±–ª–µ–Ω–∏—Ö
//   socket.on("favorite-updated", ({ isFavorite }) => {
//     setFavoritesCount((prev) =>
//       isFavorite ? prev + 1 : Math.max(prev - 1, 0)
//     );
//   });

//   // –ö–æ–ª–∏ –¥–æ–¥–∞—î—Ç—å—Å—è –Ω–æ–≤–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å
//   socket.on("new-car", (newCar) => {
//     setRecentlyAddedCount((prev) => prev + 1);
//   });

//   return () => {
//     // socket.off("pending-car-added");
//     socket.off("new-car");
//     socket.off("car-deleted");
//     socket.off("favorite-updated");
//     socket.disconnect(); // –í—ñ–¥–∫–ª—é—á–∞—î–º–æ WebSocket –ø—Ä–∏ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ
//   };
// }, []);
