import React, { useEffect, useRef, useState } from "react";
import { useNavigate } from "react-router-dom";
import "./CarCard.css"; // –°—Ç–∏–ª—ñ –¥–ª—è –∫–∞—Ä—Ç–∫–∏
import { useTheme } from "../components/ThemeContext";
import placeholderAvatar from "../assets/girl face.jpg";
import axios from "axios"; // ‚úÖ –î–æ–¥–∞—î–º–æ axios –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
import { io } from "socket.io-client";
import { url, setHeaders } from "../slices/api";

const socket = io(url);

const CarCard = ({ car, isFavorite, isAdmin, currentUser, onDelete }) => {
  const navigate = useNavigate();
  const { theme } = useTheme();
   const menuRef = useRef(null); // –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º–µ–Ω—é

  // üîπ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á ‚Äî –≤–ª–∞—Å–Ω–∏–∫ –∞–≤—Ç–æ
  const isOwner = currentUser?._id === car.createdBy?._id;
   const [menuOpen, setMenuOpen] = useState(false);
console.log("IS OWNER : ", isOwner)
  const handleDetailsClick = async () => {
    try {
      // üîπ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–≤—Ç–æ –≤ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç—ñ
      await axios.post(`${url}/viewed-cars`, { carId: car._id }, setHeaders());

      // üîπ –Ø–∫—â–æ –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–π ‚Äì –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ WebSocket –ø–æ–¥—ñ—é
      socket.emit("viewed-updated");

      // üîπ –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–µ—Ç–∞–ª–µ–π –∞–≤—Ç–æ
      navigate(`/cars/${car._id}`);
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç—ñ:", error.message);
    }
  };

  // üîπ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –º–µ–Ω—é
  const toggleMenu = () => {
    setMenuOpen((prev) => !prev);
  };

  // üîπ –ó–∞–∫—Ä–∏—Ç—Ç—è –º–µ–Ω—é –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (menuRef.current && !menuRef.current.contains(event.target)) {
        setMenuOpen(false);
      }
    };

    if (menuOpen) {
      document.addEventListener("mousedown", handleClickOutside);
    } else {
      document.removeEventListener("mousedown", handleClickOutside);
    }

    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [menuOpen]);

  return (
    // <div className="car-card"> // –±–µ–∑ —Ç–µ–º–∏
    <div className={`car-card ${theme}`}>
      {isFavorite && <div className="favorite-indicator">‚ú®</div>}{" "}
      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
      <img src={car.imageUrl} alt={car.name} className="car-image" />
      {(isAdmin || isOwner) && (
        <div className="menu-container" ref={menuRef}>
          <button className={`menu-button ${theme}`} onClick={toggleMenu}>
            ‚ãÆ
          </button>
          {menuOpen && (
            <div className={`dropdown-menu ${theme}`}>
              <button
                className={`edit-item ${theme}`}
                onClick={() => navigate(`/cars/edit/${car._id}`)}
              >
                ‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
              </button>
              {isAdmin && (
                <button
                  className={`delete-item ${theme}`}
                  onClick={() => onDelete(car._id)}
                >
                  üóë –í–∏–¥–∞–ª–∏—Ç–∏
                </button>
              )}
            </div>
          )}
        </div>
      )}
      <h3>
        {car.brand} {car.name}
      </h3>
      {/* <p>{car.brand}</p>
      <p>{car.name}</p> */}
      <p>–†—ñ–∫: {car.year}</p>
      {/* –í–ª–∞—Å–Ω–∏–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è */}
      <div className="car-owner">
        <img
          src={car.createdBy?.avatar || placeholderAvatar}
          alt={car.createdBy?.name}
          className="owner-avatar"
        />
        <span className="owner-name">{car.createdBy?.name}</span>
        <button
          className={`specs-button ${theme}`}
          onClick={() => navigate(`/car-specs/${car._id}`)}
        >
          –î–µ—â–æ –±—ñ–ª—å—à–µ
        </button>
      </div>
      {/* –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ñ –¥—ñ—ó */}
      {/* {isAdmin && (
        <div className="admin-actions">
          <button
            className="admin-button edit-button"
            onClick={() => alert("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∞–≤—Ç–æ!")}
          >
            –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
          </button>
          <button
            className="admin-button delete-button"
            onClick={() => onDelete(car._id)}
          >
            –í–∏–¥–∞–ª–∏—Ç–∏
          </button>
        </div>
      )} */}
      {/* –î—ñ—ó –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–±–æ –≤–ª–∞—Å–Ω–∏–∫–∞ */}
      {/* –ú–µ–Ω—é –¥—ñ–π (—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è/–≤–∏–¥–∞–ª–µ–Ω–Ω—è) */}
      
      {/* {(isAdmin || isOwner) && (
        <div className="admin-actions">
          <button
            className="admin-button edit-button"
            onClick={() => navigate(`/cars/edit/${car._id}`)}
          >
            –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
          </button>
          {isAdmin && (
            <button
              className="admin-button delete-button"
              onClick={() => onDelete(car._id)}
            >
              –í–∏–¥–∞–ª–∏—Ç–∏
            </button>
          )}
        </div>
      )} */}
      <button className="details-button" onClick={handleDetailsClick}>
        –î–µ—Ç–∞–ª—ñ
      </button>
    </div>
  );
};

export default CarCard;

// const handleDetailsClick = () => {
//   socket.emit("viewed-car"); // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–¥—ñ—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä
//   navigate(`/cars/${car._id}`); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–µ—Ç–∞–ª–µ–π
// };

// const handleDetailsClick = () => {
//   const viewedCars = JSON.parse(localStorage.getItem("viewedCars")) || [];

//   if (!viewedCars.some((viewedCar) => viewedCar._id === car._id)) {
//     const updatedViewedCars = [...viewedCars, car];
//     localStorage.setItem("viewedCars", JSON.stringify(updatedViewedCars));

//     // üì¢ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥—ñ—é –≤ `storage`, —â–æ–± —ñ–Ω—à—ñ –≤–∫–ª–∞–¥–∫–∏ —Ç–µ–∂ –æ–Ω–æ–≤–∏–ª–∏—Å—è
//   window.dispatchEvent(new Event("storage"));

//   // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–¥—ñ—é WebSocket
//   socket.emit("viewed-car");
//   }

//   // socket.emit("viewed-car"); // –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–¥—ñ—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä
//   navigate(`/cars/${car._id}`);
// };
