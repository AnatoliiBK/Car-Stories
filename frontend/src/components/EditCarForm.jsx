import React, { useState, useEffect, useRef } from "react";
import { useParams, useNavigate } from "react-router-dom";
import axios from "axios";
import { url, setHeaders } from "../slices/api";
import "./EditCarForm.css"; // ‚úÖ –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ
// import Loader from "./Loader"; // ‚úÖ –Ø–∫—â–æ —î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–æ–∞–¥–µ—Ä–∞
import { useTheme } from "../components/ThemeContext";

const EditCarForm = ({ onClose }) => {
  const { id } = useParams();
  const navigate = useNavigate();
  const { theme } = useTheme();
  const formRef = useRef(null); // üîπ –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ–æ—Ä–º—É

  const [car, setCar] = useState({
    name: "",
    brand: "",
    year: "",
    description: "",
    imageUrl: "",
  });

  const [image, setImage] = useState(null); // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  const [preview, setPreview] = useState(""); // URL –¥–ª—è –ø—Ä–µ–≤'—é

  useEffect(() => {
    axios
      .get(`${url}/cars/${id}`)
      .then((res) => {
        setCar(res.data);
        setPreview(res.data.imageUrl); // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
      })
      .catch((err) => console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤—Ç–æ:", err));
  }, [id]);

  const handleChange = (e) => {
    setCar({ ...car, [e.target.name]: e.target.value });
  };

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setImage(file);
      setPreview(URL.createObjectURL(file)); // –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–µ–≤‚Äô—é
    }
  };

  // üîπ –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Ñ–æ—Ä–º—É –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–µ—é
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (formRef.current && !formRef.current.contains(event.target)) {
        // onClose(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑–∞–∫—Ä–∏—Ç—Ç—è
        if (onClose) onClose();  // ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î onClose –ø–µ—Ä–µ–¥ –≤–∏–∫–ª–∏–∫–æ–º
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [onClose]);

  const handleSubmit = async (e) => {
    e.preventDefault();

    const formData = new FormData();
    formData.append("name", car.name);
    formData.append("brand", car.brand);
    formData.append("year", car.year);
    formData.append("description", car.description);
    if (image) formData.append("image", image); // –î–æ–¥–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, —è–∫—â–æ –∑–º—ñ–Ω–µ–Ω–µ

    try {
      await axios.put(`${url}/cars/${id}`, formData, setHeaders());
      alert("–ê–≤—Ç–æ–º–æ–±—ñ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ!");
      navigate(`/cars/${id}`);
    } catch (err) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤—Ç–æ:", err);
    }
  };

  return (
    <div className={`edit-car-overlay ${theme}`}>
      <div className={`edit-car-form ${theme}`} ref={formRef}>
        <button className="close-button" onClick={onClose}>
          ‚úñ
        </button>
        <h2>–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è</h2>
        <form onSubmit={handleSubmit} encType="multipart/form-data">
          <label>–ù–∞–∑–≤–∞:</label>
          <input
            type="text"
            name="name"
            value={car.name}
            onChange={handleChange}
            required
            className={`edit-area ${theme}`}
          />

          <label>–ú–∞—Ä–∫–∞:</label>
          <input
            type="text"
            name="brand"
            value={car.brand}
            onChange={handleChange}
            required
            className={`edit-area ${theme}`}
          />

          <label>–†—ñ–∫ –≤–∏–ø—É—Å–∫—É:</label>
          <input
            type="number"
            name="year"
            value={car.year}
            onChange={handleChange}
            required
            className={`edit-area ${theme}`}
          />

          <label>–û–ø–∏—Å:</label>
          <textarea
            name="description"
            value={car.description}
            onChange={handleChange}
            className={`edit-area ${theme}`}
          />

          <label>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</label>
          <input
            type="file"
            accept="image/*"
            onChange={handleImageChange}
            className={`edit-area ${theme}`}
          />

          {preview && (
            <img src={preview} alt="–ü—Ä–µ–≤'—é" className="preview-img" />
          )}

          <button className="button-submit" type="submit">
            –ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏
          </button>
        </form>
      </div>
    </div>
  );
};

export default EditCarForm;

// const EditCarForm = () => {
//   const { id } = useParams();
//   const navigate = useNavigate();

//   const [car, setCar] = useState({
//     name: "",
//     brand: "",
//     year: "",
//     description: "",
//     imageUrl: "",
//   });

//   const [image, setImage] = useState(null);
//   const [loading, setLoading] = useState(false);
//   const [saving, setSaving] = useState(false);

//   useEffect(() => {
//     const fetchCar = async () => {
//       setLoading(true);
//       try {
//         const { data } = await axios.get(`${url}/cars/${id}`);
//         setCar({
//           name: data.name,
//           brand: data.brand,
//           year: data.year,
//           description: data.description,
//           imageUrl: data.imageUrl,
//         });
//       } catch (error) {
//         console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è:", error.message);
//       } finally {
//         setLoading(false);
//       }
//     };
//     fetchCar();
//   }, [id]);

//   const handleChange = (e) => {
//     setCar({ ...car, [e.target.name]: e.target.value });
//   };

//   const handleImageChange = (e) => {
//     setImage(e.target.files[0]);
//   };

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     setSaving(true);

//     try {
//       let updatedCar = { ...car };

//       if (image) {
//         const formData = new FormData();
//         formData.append("image", image);

//         const uploadRes = await axios.post(`${url}/upload`, formData, setHeaders());
//         updatedCar.imageUrl = uploadRes.data.secure_url;
//       }

//       await axios.put(`${url}/cars/${id}`, updatedCar, setHeaders());

//       navigate(`/cars/${id}`);
//     } catch (error) {
//       console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è:", error.message);
//     } finally {
//       setSaving(false);
//     }
//   };

// //   if (loading) return <Loader />; // –ü–æ–∫–∞–∑—É—î–º–æ –ª–æ–∞–¥–µ—Ä –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è

//   return (
//     <div className="edit-car-container">
//       <h2>–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ</h2>
//       <form className="edit-car-form" onSubmit={handleSubmit}>
//         <label>–ù–∞–∑–≤–∞:</label>
//         <input type="text" name="name" value={car.name} onChange={handleChange} required />

//         <label>–ë—Ä–µ–Ω–¥:</label>
//         <input type="text" name="brand" value={car.brand} onChange={handleChange} required />

//         <label>–†—ñ–∫:</label>
//         <input type="number" name="year" value={car.year} onChange={handleChange} required />

//         <label>–û–ø–∏—Å:</label>
//         <textarea name="description" value={car.description} onChange={handleChange} required />

//         <label>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</label>
//         <div className="image-preview">
//           <img src={car.imageUrl} alt="–ê–≤—Ç–æ" />
//         </div>
//         <input type="file" accept="image/*" onChange={handleImageChange} />

//         <button type="submit" className="save-button" disabled={saving}>
//           {saving ? "–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è..." : "–û–Ω–æ–≤–∏—Ç–∏"}
//         </button>
//       </form>
//     </div>
//   );
// };

// export default EditCarForm;

// import React, { useState, useEffect } from "react";
// import { useParams, useNavigate } from "react-router-dom";
// import axios from "axios";
// import { url, setHeaders } from "../slices/api"; // ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≥–æ—Ç–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ

// const EditCarForm = () => {
//   const { id } = useParams(); // –û—Ç—Ä–∏–º—É—î–º–æ ID –∞–≤—Ç–æ –∑ URL
//   const navigate = useNavigate();

//   const [car, setCar] = useState({
//     name: "",
//     brand: "",
//     year: "",
//     description: "",
//     imageUrl: "",
//   });

//   const [image, setImage] = useState(null);
//   const [loading, setLoading] = useState(false);

//   // üîπ –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∞–≤—Ç–æ
//   useEffect(() => {
//     const fetchCar = async () => {
//       try {
//         const { data } = await axios.get(`${url}/cars/${id}`);
//         setCar({
//           name: data.name,
//           brand: data.brand,
//           year: data.year,
//           description: data.description,
//           imageUrl: data.imageUrl,
//         });
//       } catch (error) {
//         console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—è:", error.message);
//       }
//     };

//     fetchCar();
//   }, [id]);

//   // üîπ –û–±—Ä–æ–±–Ω–∏–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª—ñ–≤
//   const handleChange = (e) => {
//     setCar({ ...car, [e.target.name]: e.target.value });
//   };

//   // üîπ –û–±—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
//   const handleImageChange = (e) => {
//     setImage(e.target.files[0]);
//   };

//   // üîπ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º–∏
//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     setLoading(true);

//     try {
//       let updatedCar = { ...car };

//       // –Ø–∫—â–æ —î –Ω–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è ‚Äì –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –π–æ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
//       if (image) {
//         const formData = new FormData();
//         formData.append("image", image);

//         const uploadRes = await axios.post(`${url}/upload`, formData, setHeaders());
//         updatedCar.imageUrl = uploadRes.data.secure_url;
//       }

//       // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
//       await axios.put(`${url}/cars/${id}`, updatedCar, setHeaders());

//       navigate(`/cars/${id}`); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞–∑–∞–¥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–≤—Ç–æ
//     } catch (error) {
//       console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ:", error.message);
//     } finally {
//       setLoading(false);
//     }
//   };

//   return (
//     <div>
//       <h2>–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ</h2>
//       <form onSubmit={handleSubmit}>
//         <input type="text" name="name" value={car.name} onChange={handleChange} placeholder="–ù–∞–∑–≤–∞" required />
//         <input type="text" name="brand" value={car.brand} onChange={handleChange} placeholder="–ë—Ä–µ–Ω–¥" required />
//         <input type="number" name="year" value={car.year} onChange={handleChange} placeholder="–†—ñ–∫" required />
//         <textarea name="description" value={car.description} onChange={handleChange} placeholder="–û–ø–∏—Å" required />

//         <div>
//           <img src={car.imageUrl} alt="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–≤—Ç–æ" width="150" />
//           <input type="file" accept="image/*" onChange={handleImageChange} />
//         </div>

//         <button type="submit" disabled={loading}>
//           {loading ? "–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è..." : "–û–Ω–æ–≤–∏—Ç–∏"}
//         </button>
//       </form>
//     </div>
//   );
// };

// export default EditCarForm;

// import React, { useState, useEffect } from "react";

// const EditCarForm = ({ carId, onSuccess }) => {
//   const [carData, setCarData] = useState({
//     name: "",
//     brand: "",
//     year: "",
//     description: "",
//     image: null,
//   });

//   const [previewImage, setPreviewImage] = useState(null);
//   const [loading, setLoading] = useState(false);
//   const [error, setError] = useState("");

//   useEffect(() => {
//     // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è –∑–∞ ID
//     fetch(`/api/cars/${carId}`)
//       .then((res) => res.json())
//       .then((data) => {
//         setCarData({
//           name: data.name,
//           brand: data.brand,
//           year: data.year,
//           description: data.description,
//           image: null, // –û–Ω–æ–≤–∏–º–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –Ω–æ–≤–æ–≥–æ
//         });
//         setPreviewImage(data.imageUrl); // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
//       })
//       .catch((err) => setError("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—è"));
//   }, [carId]);

//   const handleChange = (e) => {
//     setCarData({ ...carData, [e.target.name]: e.target.value });
//   };

//   const handleImageChange = (e) => {
//     const file = e.target.files[0];
//     setCarData({ ...carData, image: file });

//     // –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
//     if (file) {
//       const reader = new FileReader();
//       reader.onloadend = () => setPreviewImage(reader.result);
//       reader.readAsDataURL(file);
//     }
//   };

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     setLoading(true);
//     setError("");

//     const formData = new FormData();
//     formData.append("name", carData.name);
//     formData.append("brand", carData.brand);
//     formData.append("year", carData.year);
//     formData.append("description", carData.description);
//     if (carData.image) {
//       formData.append("image", carData.image);
//     }

//     try {
//       const response = await fetch(`/api/cars/${carId}`, {
//         method: "PUT",
//         headers: {
//           Authorization: `Bearer ${localStorage.getItem("token")}`,
//         },
//         body: formData,
//       });

//       const data = await response.json();
//       if (!response.ok) throw new Error(data.message || "–ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è");

//       onSuccess(); // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
//     } catch (err) {
//       setError(err.message);
//     } finally {
//       setLoading(false);
//     }
//   };

//   return (
//     <form onSubmit={handleSubmit} className="edit-car-form">
//       {error && <p className="error">{error}</p>}

//       <label>–ù–∞–∑–≤–∞:</label>
//       <input
//         type="text"
//         name="name"
//         value={carData.name}
//         onChange={handleChange}
//         required
//       />

//       <label>–ú–∞—Ä–∫–∞:</label>
//       <input
//         type="text"
//         name="brand"
//         value={carData.brand}
//         onChange={handleChange}
//         required
//       />

//       <label>–†—ñ–∫ –≤–∏–ø—É—Å–∫—É:</label>
//       <input
//         type="number"
//         name="year"
//         value={carData.year}
//         onChange={handleChange}
//         required
//       />

//       <label>–û–ø–∏—Å:</label>
//       <textarea
//         name="description"
//         value={carData.description}
//         onChange={handleChange}
//         required
//       />

//       <label>–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</label>
//       <input type="file" accept="image/*" onChange={handleImageChange} />
//       {previewImage && <img src={previewImage} alt="Preview" className="preview" />}

//       <button type="submit" disabled={loading}>
//         {loading ? "–û–Ω–æ–≤–ª–µ–Ω–Ω—è..." : "–û–Ω–æ–≤–∏—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å"}
//       </button>
//     </form>
//   );
// };

// export default EditCarForm;
