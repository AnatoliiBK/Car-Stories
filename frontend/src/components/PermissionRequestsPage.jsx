import React, { useEffect, useState } from "react";
import axios from "axios";
import { url, setHeaders } from "../slices/api";
import { io } from "socket.io-client";
import CountdownTimer from "./CountdownTimer";
import { useSelector } from "react-redux";
import "./PermissionRequestsPage.css";
import { useTheme } from "../components/ThemeContext";


const socket = io(url);
// // üîå –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ socket
// const socket = io(url, { transports: ["websocket"] });

const PermissionRequestsPage = () => {
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);
  const userId = useSelector((state) => state.auth._id); // ‚Üê –Ω–∞–ø—Ä—è–º—É –∑ Redux
  const { theme } = useTheme();

  const fetchRequests = async () => {
    try {
      const res = await axios.get(
        `${url}/car-specs/permission-requests`,
        setHeaders()
      );
      console.log("FETCH ALL REQUESTS LIST : ", res.data);
      // setRequests(res.data);
      setRequests(res.data.requests);
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤:", error);
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ –î–æ–∑–≤—ñ–ª / –í—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è
  const handleResponse = async (id, approved) => {
    try {
      const res = await axios.patch(
        `${url}/car-specs/permission-request/${id}`,
        { approved },
        setHeaders()
      );

      // üîÑ –õ–æ–∫–∞–ª—å–Ω–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
      const updatedRequest = res.data.request;
      setRequests((prev) =>
        prev.map((req) =>
          req._id === updatedRequest._id
            ? { ...req, approved: updatedRequest.approved, updatedAt: new Date().toISOString(), }
            : req
        )
      );

      alert(approved ? "–ê–≤—Ç–æ–º–æ–±—ñ–ª—å –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ" : "–ó–∞–ø–∏—Ç –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ");
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–∞–ø–∏—Ç:", error);
    }
  };

  useEffect(() => {
    fetchRequests();

    if (!userId) return;

    socket.emit("join", userId); // –ü—Ä–∏—î–¥–Ω–∞–Ω–Ω—è –¥–æ –∫—ñ–º–Ω–∞—Ç–∏

    const handleNewPermissionRequest = (data) => {
      console.log("üì¨ –ü–æ–¥—ñ—è –Ω–∞–¥—ñ–π—à–ª–∞:", data);
      fetchRequests(); // –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∑–∞–ø–∏—Ç–∏
    };

    socket.on("permission-request-added", handleNewPermissionRequest);

    return () => {
      socket.off("permission-request-added", handleNewPermissionRequest);
    };
  }, [userId]);

  if (loading) return <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;

  // return (
  //   <div className="permission-requests-page">
  //     <h2>–ó–∞–ø–∏—Ç–∏ –Ω–∞ –¥–æ–∑–≤—ñ–ª</h2>
  //     {requests.length === 0 ? (
  //       <p>–ó–∞–ø–∏—Ç—ñ–≤ –Ω–µ–º–∞—î.</p>
  //     ) : (
  //       requests.map((req) => (
  //         <div key={req._id} className="request-card">
  //           <p>
  //             <strong>{req.requesterId.name}</strong> –ø—Ä–æ—Å–∏—Ç—å –¥–æ–∑–≤–æ–ª—É –¥–æ–¥–∞—Ç–∏
  //             —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ –∞–≤—Ç–æ:{" "}
  //             <strong>
  //               {req.carId.brand} {req.carId.name} ({req.carId.year})
  //             </strong>
  //           </p>

  //           {/* –°—Ç–∞—Ç—É—Å ‚Äî 3 –≤–∞—Ä—ñ–∞–Ω—Ç–∏ */}
  //           <p>
  //             –°—Ç–∞—Ç—É—Å:{" "}
  //             {req.approved === true ? (
  //               <span className="status approved">
  //                 ‚úÖ –°—Ö–≤–∞–ª–µ–Ω–æ <CountdownTimer createdAt={req.updatedAt} />
  //               </span>
  //             ) : req.approved === false ? (
  //               <span className="status rejected">‚ùå –í—ñ–¥—Ö–∏–ª–µ–Ω–æ</span>
  //             ) : (
  //               <span className="status pending">üïí –û—á—ñ–∫—É—î</span>
  //             )}
  //           </p>

  //           {/* –ö–Ω–æ–ø–∫–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —â–µ –Ω–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —ñ –Ω–µ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ */}
  //           {req.approved === null || req.approved === undefined ? (
  //             <div>
  //               <button onClick={() => handleResponse(req._id, true)}>
  //                 ‚úÖ –î–æ–∑–≤–æ–ª–∏—Ç–∏
  //               </button>
  //               <button onClick={() => handleResponse(req._id, false)}>
  //                 ‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏
  //               </button>
  //             </div>
  //           ) : (
  //             <p style={{ color: "gray" }}>–ó–∞–ø–∏—Ç –≤–∂–µ –æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ</p>
  //           )}
  //         </div>
  //       ))
  //     )}
  //   </div>
  // );
  return (
    <div className="permission-requests-page">
      <h2 className="page-title">–ó–∞–ø–∏—Ç–∏ –Ω–∞ –¥–æ–∑–≤—ñ–ª</h2>
      {requests.length === 0 ? (
        <p className="no-requests">–ó–∞–ø–∏—Ç—ñ–≤ –Ω–µ–º–∞—î.</p>
      ) : (
        <div className="requests-container">
          {requests.map((req) => (
            <div key={req._id} className="request-card">
              <p className="request-text">
                <strong>{req.requesterId.name}</strong> –ø—Ä–æ—Å–∏—Ç—å –¥–æ–∑–≤–æ–ª—É –¥–æ–¥–∞—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ –∞–≤—Ç–æ:{" "}
                <strong>
                  {req.carId.brand} {req.carId.name} ({req.carId.year})
                </strong>
              </p>
  
              <p className="request-status">
                –°—Ç–∞—Ç—É—Å:{" "}
                {req.approved === true ? (
                  <span className={`status approved ${theme}`}>
                    ‚úÖ –°—Ö–≤–∞–ª–µ–Ω–æ <CountdownTimer createdAt={req.updatedAt} />
                  </span>
                ) : req.approved === false ? (
                  <span className={`status rejected ${theme}`}>‚ùå –í—ñ–¥—Ö–∏–ª–µ–Ω–æ</span>
                ) : (
                  <span className={`status pending ${theme}`}>üïí –û—á—ñ–∫—É—î</span>
                )}
              </p>
  
              {req.approved === null || req.approved === undefined ? (
                <div className="request-actions">
                  <button className={`btn approve ${theme}`} onClick={() => handleResponse(req._id, true)}>
                    ‚úÖ –î–æ–∑–≤–æ–ª–∏—Ç–∏
                  </button>
                  <button className={`btn reject ${theme}`} onClick={() => handleResponse(req._id, false)}>
                    ‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏
                  </button>
                </div>
              ) : (
                <p className="already-processed">–ó–∞–ø–∏—Ç –≤–∂–µ –æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω–æ</p>
              )}
            </div>
          ))}
        </div>
      )}
    </div>
  );
  
};

export default PermissionRequestsPage;
