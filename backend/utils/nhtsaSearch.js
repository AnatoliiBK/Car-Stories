// const axios = require("axios");

// const NHTSA_API_URL = "https://vpic.nhtsa.dot.gov/api/vehicles";

// const nhtsaSearchCarSpecs = async ({ vin, make, model, year }) => {
//   try {
//     let carData;

//     if (vin) {
//       // –ü–æ—à—É–∫ –∑–∞ VIN
//       console.log(`üîç –ü–æ—à—É–∫ –∑–∞ VIN: ${vin} —á–µ—Ä–µ–∑ NHTSA API...`);
//       const response = await axios.get(
//         `${NHTSA_API_URL}/DecodeVinValues/${vin}?format=json`
//       );

//       if (response.data.Results && response.data.Results.length > 0) {
//         carData = response.data.Results[0];
//         if (carData.ErrorCode !== "0") {
//           console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ NHTSA API: ${carData.ErrorText}`);
//           return null;
//         }
//       } else {
//         console.error("‚ùå –î–∞–Ω—ñ –∑–∞ VIN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
//         return null;
//       }
//     } else if (make && model && year) {
//       // –ü–æ—à—É–∫ –∑–∞ make, model, year
//       console.log(
//         `üîç –ü–æ—à—É–∫ –∑–∞ Make: ${make}, Model: ${model}, Year: ${year}...`
//       );
//       const response = await axios.get(
//         `${NHTSA_API_URL}/GetModelsForMakeYear/make/${make}/modelyear/${year}?format=json`
//       );

//       if (response.data.Results && response.data.Results.length > 0) {
//         carData = response.data.Results.find(
//           (item) => item.Model_Name.toLowerCase() === model.toLowerCase()
//         );

//         if (!carData) {
//           console.error(`‚ùå –ú–æ–¥–µ–ª—å ${model} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è ${make} ${year}`);
//           return null;
//         }

//         // ‚ùå –ö–ª—ñ—î–Ω—Ç –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è
//         // üîç –ü–æ—à—É–∫ –∑–∞ Make: BMW, Model: BMW Alpina B7 LWB XDrive, Year: 2020...
//         // ‚ùå –ú–æ–¥–µ–ª—å BMW Alpina B7 LWB XDrive –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è BMW 2020

//         // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
//         const vinExampleResponse = await axios.get(
//           `${NHTSA_API_URL}/GetVehicleVariableList?format=json`
//         );
//         carData = {
//           Make: carData.Make_Name,
//           Model: carData.Model_Name,
//           ModelYear: year,
//           FuelTypePrimary: "–Ω–µ–≤—ñ–¥–æ–º–æ", // –ü–æ—Ç—Ä–µ–±—É—î –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Ç—É –∑ VIN
//           DisplacementCC: "0",
//           EngineHP: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//           EngineCylinders: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//           TransmissionStyle: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//           BodyClass: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//           Doors: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//           DriveType: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//           MakeID: carData.Make_ID,
//           ModelID: carData.Model_ID,
//           VehicleType: "Passenger Car", // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —É—Ç–æ—á–Ω–∏—Ç–∏ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏
//           PlantCountry: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//           PlantCompanyName: "–Ω–µ–≤—ñ–¥–æ–º–æ",
//         };
//       } else {
//         console.error(`‚ùå –î–∞–Ω—ñ –¥–ª—è ${make} ${year} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
//         return null;
//       }
//     } else {
//       console.error("‚ùå –ü–æ—Ç—Ä—ñ–±–µ–Ω VIN –∞–±–æ Make/Model/Year");
//       return null;
//     }

//     // –§–æ—Ä–º—É—î–º–æ –æ–±'—î–∫—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Å—Ö–µ–º–∏
//     const specs = {
//       fuelType: mapFuelType(carData.FuelTypePrimary),
//       combustionEngine: {
//         engineDisplacement:
//           carData.DisplacementCC && carData.DisplacementCC !== "0"
//             ? parseFloat(carData.DisplacementCC) / 1000
//             : null,
//         horsepower: carData.EngineHP ? parseInt(carData.EngineHP) : null,
//         torque: null, // NHTSA –Ω–µ –∑–∞–≤–∂–¥–∏ –Ω–∞–¥–∞—î torque
//         fuelConsumption: null, // –ü–æ—Ç—Ä–µ–±—É—î —ñ–Ω—à–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞
//         transmission: carData.TransmissionStyle || null,
//       },
//       nhtsaSpecs: {
//         make: carData.Make || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//         model: carData.Model || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//         makeId: carData.MakeID ? parseInt(carData.MakeID) : null,
//         modelId: carData.ModelID ? parseInt(carData.ModelID) : null,
//         year: carData.ModelYear ? parseInt(carData.ModelYear) : null,
//         vehicleType: carData.VehicleType || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//         plantCountry: carData.PlantCountry || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//         plantCompany: carData.PlantCompanyName || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//         bodyClass: carData.BodyClass || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//       },
//       additionalSpecs: {
//         doors: carData.Doors || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//         driveType: carData.DriveType || "–Ω–µ–≤—ñ–¥–æ–º–æ",
//       },
//     };

//     console.log("‚úÖ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–æ –∑ NHTSA:", specs);
//     return specs;
//   } catch (error) {
//     console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ NHTSA API:", error.message);
//     return null;
//   }
// };

// // –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–∞–ø—ñ–Ω–≥—É —Ç–∏–ø—É –ø–∞–ª–∏–≤–∞
// function mapFuelType(fuelType) {
//   if (!fuelType) return null;
//   const fuelMap = {
//     Gasoline: "–±–µ–Ω–∑–∏–Ω",
//     Diesel: "–¥–∏–∑–µ–ª—å",
//     Electric: "–µ–ª–µ–∫—Ç—Ä–æ",
//     Hybrid: "–≥—ñ–±—Ä–∏–¥",
//   };
//   return (
//     fuelMap[fuelType] ||
//     fuelType.toLowerCase().replace(/\s+/g, "-").split("-")[0]
//   );
// }

// module.exports = { nhtsaSearchCarSpecs };

const axios = require("axios");

const NHTSA_API_URL = "https://vpic.nhtsa.dot.gov/api/vehicles";

const nhtsaSearchCarSpecs = async ({ vin, make, model, year }) => {
  try {
    let carData;

    if (vin) {
      console.log(`üîç –ü–æ—à—É–∫ –∑–∞ VIN: ${vin} —á–µ—Ä–µ–∑ NHTSA API...`);
      const response = await axios.get(
        `${NHTSA_API_URL}/DecodeVinValues/${vin}?format=json`
      );
      console.log("üìã –í—ñ–¥–ø–æ–≤—ñ–¥—å NHTSA –∑–∞ VIN:", response.data);

      if (response.data.Results && response.data.Results.length > 0) {
        carData = response.data.Results[0];
        if (carData.ErrorCode !== "0") {
          console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ NHTSA API: ${carData.ErrorText}`);
          return null;
        }
      } else {
        console.error("‚ùå –î–∞–Ω—ñ –∑–∞ VIN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        return null;
      }
    } else if (make && model && year) {
      console.log(
        `üîç –ü–æ—à—É–∫ –∑–∞ Make: ${make}, Model: ${model}, Year: ${year}...`
      );
      let response = await axios.get(
        `${NHTSA_API_URL}/GetModelsForMakeYear/make/${make}/modelyear/${year}?format=json`
      );
      console.log("üìã –í—ñ–¥–ø–æ–≤—ñ–¥—å NHTSA –∑–∞ Make/Year:", response.data);

      if (response.data.Results && response.data.Results.length > 0) {
        carData = response.data.Results.find(
          (item) => item.Model_Name.toLowerCase() === model.toLowerCase()
        );
      }

      // –Ø–∫—â–æ –º–æ–¥–µ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, —à—É–∫–∞—î–º–æ –≤ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–º—É —Ä–æ—Ü—ñ
      if (!carData && year) {
        const previousYear = parseInt(year) - 1;
        console.log(
          `üîç –ú–æ–¥–µ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, –ø–æ—à—É–∫ –∑–∞ ${make} ${model} ${previousYear}...`
        );
        response = await axios.get(
          `${NHTSA_API_URL}/GetModelsForMakeYear/make/${make}/modelyear/${previousYear}?format=json`
        );
        console.log("üìã –í—ñ–¥–ø–æ–≤—ñ–¥—å NHTSA –∑–∞ Make/Previous Year:", response.data);

        if (response.data.Results && response.data.Results.length > 0) {
          carData = response.data.Results.find(
            (item) => item.Model_Name.toLowerCase() === model.toLowerCase()
          );
        }
      }

      if (!carData) {
        console.error(`‚ùå –ú–æ–¥–µ–ª—å ${model} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è ${make} ${year}`);
        return null;
      }

      carData = {
        Make: carData.Make_Name,
        Model: carData.Model_Name,
        ModelYear: carData.ModelYear || year,
        MakeID: carData.Make_ID,
        ModelID: carData.Model_ID,
        VehicleType: "Passenger Car",
        FuelTypePrimary: "Electric", // –î–ª—è Tesla –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        DisplacementCC: "0", // –ï–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—ñ –Ω–µ –º–∞—é—Ç—å —Ü—å–æ–≥–æ
        EngineHP: "–Ω–µ–≤—ñ–¥–æ–º–æ",
        EngineCylinders: "0", // –ï–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—ñ
        TransmissionStyle: "Automatic", // –ü—Ä–∏–ø—É—â–µ–Ω–Ω—è –¥–ª—è Tesla
        BodyClass: "Sport Utility Vehicle (SUV)", // –ü—Ä–∏–ø—É—â–µ–Ω–Ω—è
        Doors: "4", // –ü—Ä–∏–ø—É—â–µ–Ω–Ω—è
        DriveType: "AWD", // –ü—Ä–∏–ø—É—â–µ–Ω–Ω—è –¥–ª—è Tesla
        PlantCountry: "USA", // –ü—Ä–∏–ø—É—â–µ–Ω–Ω—è
        PlantCompanyName: "Tesla, Inc.",
      };
    } else {
      console.error("‚ùå –ü–æ—Ç—Ä—ñ–±–µ–Ω VIN –∞–±–æ Make/Model/Year");
      return null;
    }

    const specs = {
      fuelType: mapFuelType(carData.FuelTypePrimary),
      combustionEngine: {
        engineDisplacement:
          carData.DisplacementCC && carData.DisplacementCC !== "0"
            ? parseFloat(carData.DisplacementCC) / 1000
            : null,
        horsepower: carData.EngineHP ? parseInt(carData.EngineHP) : null,
        torque: null,
        fuelConsumption: null,
        transmission: carData.TransmissionStyle || null,
      },
      nhtsaSpecs: {
        make: carData.Make || "–Ω–µ–≤—ñ–¥–æ–º–æ",
        model: carData.Model || "–Ω–µ–≤—ñ–¥–æ–º–æ",
        makeId: carData.MakeID ? parseInt(carData.MakeID) : null,
        modelId: carData.ModelID ? parseInt(carData.ModelID) : null,
        year: carData.ModelYear ? parseInt(carData.ModelYear) : null,
        vehicleType: carData.VehicleType || "–Ω–µ–≤—ñ–¥–æ–º–æ",
        plantCountry: carData.PlantCountry || "–Ω–µ–≤—ñ–¥–æ–º–æ",
        plantCompany: carData.PlantCompanyName || "–Ω–µ–≤—ñ–¥–æ–º–æ",
        bodyClass: carData.BodyClass || "–Ω–µ–≤—ñ–¥–æ–º–æ",
      },
      additionalSpecs: {
        doors: carData.Doors || "–Ω–µ–≤—ñ–¥–æ–º–æ",
        driveType: carData.DriveType || "–Ω–µ–≤—ñ–¥–æ–º–æ",
      },
    };

    console.log("‚úÖ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–æ –∑ NHTSA:", specs);
    return specs;
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ NHTSA API:", error.message);
    return null;
  }
};

function mapFuelType(fuelType) {
  if (!fuelType) return null;
  const fuelMap = {
    Gasoline: "–±–µ–Ω–∑–∏–Ω",
    Diesel: "–¥–∏–∑–µ–ª—å",
    Electric: "–µ–ª–µ–∫—Ç—Ä–æ",
    Hybrid: "–≥—ñ–±—Ä–∏–¥",
  };
  return (
    fuelMap[fuelType] ||
    fuelType.toLowerCase().replace(/\s+/g, "-").split("-")[0]
  );
}

module.exports = { nhtsaSearchCarSpecs };

// const axios = require("axios");
// const { CarSpecs } = require("../models/CarSpecsSchema"); // –í–∞—à—ñ –º–æ–¥–µ–ª—ñ MongoDB
// require("dotenv").config();

// const NHTSA_API_URL = "https://vpic.nhtsa.dot.gov/api/vehicles";

// // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è –∑–∞ –º–∞—Ä–∫–æ—é, –º–æ–¥–µ–ª–ª—é —Ç–∞ —Ä–æ–∫–æ–º
// async function nhtsaSearchCarSpecs(make, model, year) {
//   try {
//     // –ó–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–æ–¥–µ–ª–µ–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –º–∞—Ä–∫–∏
//     const modelsResponse = await axios.get(
//       `${NHTSA_API_URL}/getmodelsformake/${make}`,
//       {
//         params: {
//           format: "json",
//         },
//       }
//     );

//     if (
//       modelsResponse.data.Results &&
//       modelsResponse.data.Results.length === 0
//     ) {
//       console.error("–ú–æ–¥–µ–ª—ñ –¥–ª—è —Ü—ñ—î—ó –º–∞—Ä–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.");
//       return null;
//     }

//     const models = modelsResponse.data.Results;
//     console.log("Available Models: ", models);

//     // –ó–Ω–∞–π—Ç–∏ –º–æ–¥–µ–ª—å –∑–∞ –Ω–∞–∑–≤–æ—é
//     const carModel = models.find(
//       (item) => item.Model_Name.toLowerCase() === model.toLowerCase()
//     );

//     if (!carModel) {
//       console.error("–ú–æ–¥–µ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞.");
//       return null;
//     }

//     // –Ø–∫—â–æ –º–æ–¥–µ–ª—å –∑–Ω–∞–π–¥–µ–Ω–∞, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —ó—ó –≤ MongoDB
//     const carSpecs = {
//       make: carModel.Make_Name,
//       model: carModel.Model_Name,
//       modelId: carModel.Model_ID,
//       makeId: carModel.Make_ID,
//       year: year,
//     };

//     // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —É MongoDB
//     const newCarSpecs = new CarSpecs({
//       carId: `${make}_${model}_${year}`, // –ú–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä
//       source: "nhtsa",
//       carSpecs, // –¢–µ—Ö–Ω—ñ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
//     });

//     await newCarSpecs.save();

//     console.log("–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ MongoDB");
//     return carSpecs;
//   } catch (error) {
//     console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∑ NHTSA API:", error);
//     return null;
//   }
// }

// module.exports = { nhtsaSearchCarSpecs };

// const axios = require("axios");

// const NHTSA_API_URL = "https://vpic.nhtsa.dot.gov/api/vehicles";

// // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∞–≤—Ç–æ
// async function nhtsaSearchCarSpecs(make, model, year) {
//   try {
//     const response = await axios.get(`${NHTSA_API_URL}/getallmakes`, {
//       params: {
//         make,
//         model,
//         year,
//         format: "json",
//       },
//     });

//     // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –¥–∞–Ω—ñ –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
//     if (response.data.Results && response.data.Results.length > 0) {
//       console.log("NHTSA RESULTS : ", response.data.Results);
//       return response.data.Results[0]; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–µ—Ä—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
//     }

//     return null; // –Ø–∫—â–æ –¥–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ
//   } catch (error) {
//     console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ NHTSA API:", error);
//     return null;
//   }
// }

// module.exports = { nhtsaSearchCarSpecs };
