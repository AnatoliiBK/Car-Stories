const { Server } = require("socket.io");

function setupWebSocket(server) {
  const io = new Server(server, {
    cors: {
      origin: "*", // –î–æ–∑–≤–æ–ª—è—î –≤—Å—ñ –¥–∂–µ—Ä–µ–ª–∞ (–∞–±–æ –≤–∫–∞–∂—ñ—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –¥–æ–º–µ–Ω–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
      methods: ["GET", "POST"],
    },
  });

  // –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
  io.on("connection", (socket) => {
    console.log("üîó –ù–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è");

    socket.on("join", (userId) => {
      console.log("üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –∫—ñ–º–Ω–∞—Ç–∏:", userId);
      socket.join(userId); // ‚Üê –û—Å—å —Ü–µ –≥–æ–ª–æ–≤–Ω–µ
    });

    // socket.on("viewed-car", (carId) => {
    //   console.log(`üöó –ê–≤—Ç–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–µ: ${carId}`);
    //   io.emit("viewed-car", carId); // üì° –ù–∞–¥—Å–∏–ª–∞—î–º–æ carId –¥–ª—è —Ç–æ—á–∫–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    // });
    // socket.on("favorite-updated", (carId) => {
    //   console.log(`üöó –ê–≤—Ç–æ —É–ª—é–±–ª–µ–Ω–µ: ${carId}`);
    //   io.emit("favorite-updated", carId); // üì° –ù–∞–¥—Å–∏–ª–∞—î–º–æ carId –¥–ª—è —Ç–æ—á–∫–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    // });
    // // –ö–æ–ª–∏ —Ö—Ç–æ—Å—å –ø–µ—Ä–µ–≥–ª—è–Ω—É–≤ –∞–≤—Ç–æ, —Ä–æ–∑—Å–∏–ª–∞—î–º–æ –ø–æ–¥—ñ—é –≤—Å—ñ–º –∫–ª—ñ—î–Ω—Ç–∞–º
    // socket.on("viewed-car", () => {
    //   io.emit("viewed-car"); // üì° –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –≤—Å—ñ—Ö
    // });

    // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –∑–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ—Å—Ç—é

    socket.on("disconnect", () => {
      console.log("‚ùå –ö–ª—ñ—î–Ω—Ç –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è");
    });
  });

  return io;
}

module.exports = setupWebSocket;
